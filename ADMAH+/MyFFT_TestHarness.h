// MyFFT_TestHarness.h (Created by FFTDesigner - Version 3.56)

/******************************************************************************

COPYRIGHT.  This software is Copyright © 2011 RHDC Services Ltd.

        !  DO NOT EDIT THIS FILE AS IT MAY BE OVERWRITTEN BY
        THE DESIGNER RESULTING IN YOUR CHANGES BEING LOST  !

DISTRIBUTION.  This software may NOT be distributed to a third party without
prior written approval of the copyright holder. Please see the FFT Designer
End User Licence Agreement for details about distribution in object-code form.

DISCLAIMER.  This software is provided "AS IS", without express or implied
warranty.  In no event shall the copyright holder, author(s) or provider(s)
of this software be held liable for any damages arising from its use.

        FFTLength ................................ 128
        WindowType ............................... Kaiser
        WindowLoss (dB) .......................... 7,97
        Equivalent Noise Bandwidth ENBW (Bins) ... 1,81
        Inherent Power Gain ...................... 0,29
        Coherent Power Gain ...................... 0,16
        WindowAlpha .............................. 3
        Language ................................. MSP430 Extended C
        Algorithm ................................ Integer (16 Bit)
        Use Shift Division ....................... True
        Use Direct MPY32 Access .................. False

******************************************************************************/

#include "MyFFT.h"

// export lookup tables

extern const MyFFT_Workspace_t MyFFT_SampledR[];
extern const MyFFT_Workspace_t MyFFT_SampledI[];
extern const MyFFT_Workspace_t MyFFT_WindowedR[];
extern const MyFFT_Workspace_t MyFFT_WindowedI[];
extern const MyFFT_Workspace_t MyFFT_TransformedR[];
extern const MyFFT_Workspace_t MyFFT_TransformedI[];

// export test methods

void MyFFT_TestHarnessLoadComplex(const MyFFT_Workspace_t * table_pointer_r, const MyFFT_Workspace_t * table_pointer_i);
void MyFFT_TestHarnessLoadWindowed(void);
void MyFFT_TestHarnessLoadSampled(void);
int MyFFT_TestHarnessCompareComplex(const MyFFT_Workspace_t * table_pointer_r, const MyFFT_Workspace_t * table_pointer_i);
int MyFFT_TestHarnessCompareWindowed(void);
int MyFFT_TestHarnessCompareTransformed(void);
